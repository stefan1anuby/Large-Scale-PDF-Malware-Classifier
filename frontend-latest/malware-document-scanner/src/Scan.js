// src/Scan.js
import React, { useState } from 'react';
import './App.css';

function Scan({ authToken }) {
	const [isUploading, setIsUploading] = useState(false);
	const [result, setResult] = useState(null);

	const handleDragOver = (e) => {
	  e.preventDefault(); // Prevent default behavior (Prevent file from being opened)
	};
  
	const handleDrop = (e) => {
	  e.preventDefault();
	  const files = e.dataTransfer.files;
	  if (files.length) {
		uploadFile(files[0]);
	  }
	};
  
	const uploadFile = (file) => {
	  setIsUploading(true); // Show loading spinner
  
	  //let authToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiOTkxMTE2MjgtMzc3Yi00M2JhLWIwNGItMWYxOWM1ODFhNWNiIiwiZXhwIjoxNzEzODIxMTAwfQ.gA9bA4W4FqN67rwXE3y-1Tu932bd2X75GfMe40fGbDw';

	  const formData = new FormData();
	  formData.append('file', file);
  
	  fetch('http://127.0.0.1:8080/upload', {
		method: 'POST',
		body: formData,
		headers: {
			'Authorization': `${authToken}`
		}
		
	  })
	  .then(response => response.json())
	  .then(data => {
		console.log('Success:', data);

		const label = data.predicted_label === 1 ? 'Malware' : 'Clean';
		const confidence = data.prediction_confidence * 100 + "%";
		setResult({ label, confidence });
	  })
	  .catch(error => {
		console.error('Error:', error);

		setResult({ label: 'Error', confidence: 'N/A' });
	  })
	  .finally(() => {
		setIsUploading(false); // Hide loading spinner
	  });
	};
  
	return (
		<div
		  className={`drop-area ${isUploading ? 'uploading' : ''}`}
		  onDragOver={handleDragOver}
		  onDrop={handleDrop}
		>
		  {isUploading ? (
			<div className="loader"></div>
		  ) : (
			<>
			  {!result ? (
				<p>Drag and drop a file here or click to select a file</p>
			  ) : (
				<div className={`result ${result.label.toLowerCase()}`}>
				  <p>Result: {result.label}</p>
				  <p>Confidence: {result.confidence}</p>
				</div>
			  )}
			</>
		  )}
		</div>
	  );
}

export default Scan;
