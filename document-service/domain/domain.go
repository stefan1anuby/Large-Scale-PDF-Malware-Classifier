package domain

import (
	"context"
	"mime/multipart"
)

type Document struct {
    Hash     string
    FileName string
    Size     int64
    File     multipart.File
    // Other document-related fields
}

type Result struct {
    PredictedLabel       int     `json:"predicted_label"`
    PredictionConfidence float64 `json:"prediction_confidence"`
}

// ResultStorage defines the interface for storing and retrieving job results.
type ResultStorage interface {
    StoreResult(ctx context.Context, jobID string, result Result) error
    RetrieveResult(ctx context.Context, jobID string) (*Result, error)
}

// Domain services interfaces
type DocumentStorage interface {
    UploadDocument(doc *Document) (string, error)
}

type DocumentScanner interface {
    Scan(doc *Document, storageLocation string) (*Result,error)
}

type ReadResultChannel interface {
    ReadMessages(ctx context.Context, processMessage func(msg string) error) error
}