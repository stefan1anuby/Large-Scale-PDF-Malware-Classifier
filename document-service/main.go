package main

import (
	"document-service/application"
	"document-service/handler"
	"document-service/helper"
	"document-service/infrastructure"
	"net/http"
	"os"

	"github.com/joho/godotenv"
	log "github.com/sirupsen/logrus"
)

func main() {
	customFormatter := new(log.TextFormatter)
    customFormatter.TimestampFormat = "2006-01-02 15:04:05.000"
    log.SetFormatter(customFormatter)
    customFormatter.FullTimestamp = true

	err := godotenv.Load()
	if err != nil {
		//log.Fatal("Error loading .env file")
	}

	userServiceClient , err := helper.NewUserServiceClient(os.Getenv("USER_SERVICE_ADRESS"))
	if err != nil {
		//log.Fatal("Error connecting to user service client")
	}

	//serviceInstanceKey := os.Getenv("SERVICE_NAME") + strconv.Itoa(rand.Intn(100))
	
	
	documentStorage := infrastructure.NewS3StorageService()
	documentScanner := infrastructure.NewLambdaScanner()
	uploadService := application.NewUploadService(documentStorage, documentScanner)
	
	http.HandleFunc("/health", handler.HandleHealthCheck)
	http.HandleFunc("/upload", handler.HandlerUploadDoc(uploadService, userServiceClient))
	http.HandleFunc("/update", handler.HandleUpdateDoc)
	http.HandleFunc("/delete", handler.HandleDeleteDoc)
	//TODO add HealthCheck endpoint
	log.Info("Server is starting on port 8080")
	http.ListenAndServe(":8080", nil)
}