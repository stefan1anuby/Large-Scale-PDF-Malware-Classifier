package router

import (
	"user-service/internal/api/handler"
	"user-service/internal/api/middleware"
	"user-service/internal/service/auth"

	"github.com/gin-gonic/gin"
)

func SetupRouter(group *gin.RouterGroup, authService *auth.AuthService) {
    
	group.GET("/health", handler.HandleHealthCheck)
	group.POST("/register", func(c *gin.Context) {
		handler.HandleRegister(c, authService)
	})
	group.POST("/login", func(c *gin.Context) {
		handler.HandleLogin(c, authService)
	})

	authorized := group.Group("/")
	authorized.Use(middleware.AuthMiddleware(authService))
	{
		authorized.POST("/change-password", func(c *gin.Context) {
			handler.HandlePasswordChange(c, authService)
		})
		authorized.DELETE("/delete-user", func(c *gin.Context) {
			handler.HandleDeleteUser(c, authService)
		})
		authorized.GET("/check-permission", func(c *gin.Context) {
			handler.HandleCheckPermission(c, authService)
		})
		authorized.GET("/get-user-credits", func(c *gin.Context) {
			handler.HandleGetUserCredits(c, authService)
		})
		authorized.POST("/consume-user-credits", func(c *gin.Context) {
			handler.HandleConsumeUserCredits(c, authService)
		})
		authorized.POST("/add-user-credits", func(c *gin.Context) {
			handler.HandleAddUserCredits(c, authService)
		})
	}
}