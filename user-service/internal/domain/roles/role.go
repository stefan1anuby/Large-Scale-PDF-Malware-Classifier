package roles

import (
	"user-service/internal/domain/permissions"

	"github.com/google/uuid"
)

type Role struct {
	ID          uuid.UUID
	Name        string
	Description string
	Permissions []permissions.Permission
}

func NewRole(name string, permissions []permissions.Permission) Role {
    return Role{
        ID:          uuid.New(),
        Name:        name,
        Permissions: permissions,
    }
}

func (r *Role) AddPermission(permission permissions.Permission) {
    for _, p := range r.Permissions {
        if p.ID == permission.ID {
            return // Permission already exists
        }
    }
    r.Permissions = append(r.Permissions, permission)
}

// RemovePermission removes a permission from the role.
func (r *Role) RemovePermission(permissionID uuid.UUID) {
    for i, p := range r.Permissions {
        if p.ID == permissionID {
            r.Permissions = append(r.Permissions[:i], r.Permissions[i+1:]...)
            return
        }
    }
}

// HasPermission checks if the role has a specific permission.
func (r *Role) HasPermission(permissionID uuid.UUID) bool {
    for _, p := range r.Permissions {
        if p.ID == permissionID {
            return true
        }
    }
    return false
}
