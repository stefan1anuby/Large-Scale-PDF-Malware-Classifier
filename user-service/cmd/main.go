package main

import (
	"user-service/internal/infrastructure/api/handler"
	"user-service/internal/infrastructure/api/middleware"
	"user-service/internal/service/auth"

	"github.com/gin-gonic/gin"
)

func main() {
    authService, _ := auth.NewAuthService(auth.WithMemoryUserRepository())

    router := gin.Default()

    api := router.Group("/v1")
    {
        api.GET("/health", func(c *gin.Context) {
            handler.HandleHealthCheck(c)
        })
        api.POST("/register", func(c *gin.Context) {
            handler.HandleRegister(c, authService)
        })
        api.POST("/login", func(c *gin.Context) {
            handler.HandleLogin(c, authService)
        })

        authorized := api.Group("/")
        authorized.Use(middleware.AuthMiddleware(authService))
        {
            authorized.POST("/change-password", func(c *gin.Context) {
                handler.HandlePasswordChange(c, authService)
            })
            authorized.DELETE("/delete-user", func(c *gin.Context) {
                handler.HandleDeleteUser(c, authService)
            })
            authorized.GET("/check-permission", func(c *gin.Context) {
                handler.HandleCheckPermission(c, authService)
            })
        }
    }

    router.Run(":8080")
}